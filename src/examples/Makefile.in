# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Makefile.

SHELL = '/bin/sh'

SRCDIR = @srcdir@
INCLUDEDIR = @top_builddir@/include
BINDIR = @top_builddir@/bin
LIBDIR = @top_builddir@/lib

CC = @CC@
CXX = @CXX@
SWIG = @SWIG@

CFLAGS = @CFLAGS@
CXXFLAGS = @CXXFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@

OS_NAME = @OS_NAME@

JAVA_HOME = @JAVA_HOME@
PYTHON_HEADERS = @PYTHON_HEADERS@

WITH_ZOOKEEPER = @WITH_ZOOKEEPER@

WITH_INCLUDED_ZOOKEEPER = @WITH_INCLUDED_ZOOKEEPER@

BOOST = third_party/boost-1.37.0
PROTOBUF = third_party/protobuf-2.3.0
GLOG = third_party/glog-0.3.1
LIBPROCESS = third_party/libprocess
LIBEV = $(LIBPROCESS)/third_party/libev-3.8
ZOOKEEPER = third_party/zookeeper-3.3.1/src/c

# Ensure that we get better debugging info.
CFLAGS += -g
CXXFLAGS += -g

# Add include and build include to CFLAGS and CXXFLAGS.
CFLAGS += -I@top_srcdir@/include -I$(INCLUDEDIR)
CXXFLAGS += -I@top_srcdir@/include -I$(INCLUDEDIR)

# Add boost to CFLAGS and CXXFLAGS.
CFLAGS += -I@top_srcdir@/$(BOOST)
CXXFLAGS += -I@top_srcdir@/$(BOOST)

# Add glog to include and lib paths.
CXXFLAGS += -I@top_srcdir@/$(GLOG)/src -I@top_builddir@/$(GLOG)/src
LDFLAGS += -L@top_builddir@/$(GLOG)/.libs

# Add protobuf to include and lib paths.
CXXFLAGS += -I@top_srcdir@/$(PROTOBUF)/src
LDFLAGS += -L@top_builddir@/$(PROTOBUF)/src/.libs

# Add libprocess to CFLAGS, CXXFLAGS, and LDFLAGS.
CFLAGS += -I@top_srcdir@/$(LIBPROCESS)
CXXFLAGS += -I@top_srcdir@/$(LIBPROCESS)
LDFLAGS += -L@top_builddir@/$(LIBPROCESS)

# Add libev to LDFLAGS.
LDFLAGS += -L@top_builddir@/$(LIBEV)/.libs

# Add included ZooKeeper to include and lib paths if necessary.
ifeq ($(WITH_INCLUDED_ZOOKEEPER),1)
  CXXFLAGS += -I@top_srcdir@/$(ZOOKEEPER)/include -I@top_srcdir@/$(ZOOKEEPER)/generated
  LDFLAGS += -L@top_builddir@/$(ZOOKEEPER)/.libs
endif

# Add dependency tracking to CFLAGS, CXXFLAGS.
CFLAGS += -MMD -MP
CXXFLAGS += -MMD -MP

# Add protobuf, glog, libev, libprocess, pthread, and dl to LIBS.
LIBS += -lprotobuf -lglog -lprocess -lev -lpthread -ldl

# Add ZooKeeper if necessary.
ifeq ($(WITH_ZOOKEEPER),1)
  LIBS += -lzookeeper_mt
endif

SCHED_EXES = $(BINDIR)/examples/cpp-test-framework	\
	     $(BINDIR)/examples/long-lived-framework	\
             $(BINDIR)/examples/memhog			\
             $(BINDIR)/examples/sleep				\
             $(BINDIR)/examples/scheduled-memhog

EXEC_EXES = $(BINDIR)/examples/cpp-test-executor	\
            $(BINDIR)/examples/long-lived-executor	\
            $(BINDIR)/examples/sleep-executor \
            $(BINDIR)/examples/memhog-executor

EXAMPLES_EXES = $(SCHED_EXES) $(EXEC_EXES)

MESOS_SCHED_LIB = $(LIBDIR)/libmesos_sched.a
MESOS_EXEC_LIB = $(LIBDIR)/libmesos_exec.a

# Create rules for building the directories that aren't created
# automagically by configure.
DIRECTORIES = $(BINDIR)/examples


default: all

-include $(patsubst %, %.d, $(EXAMPLES_EXES))

$(DIRECTORIES): %:
	mkdir -p $@

$(EXAMPLES_EXES): | $(BINDIR)/examples

$(BINDIR)/examples/test-framework: @srcdir@/test_framework.cpp $(MESOS_SCHED_LIB)
	$(CXX) $(CXXFLAGS) -o $@ $< $(MESOS_SCHED_LIB) $(LDFLAGS) $(LIBS)

$(BINDIR)/examples/test-executor: @srcdir@/test_exec.cpp $(MESOS_EXEC_LIB)
	g++ $(CXXFLAGS) -o $@ $< $(MESOS_EXEC_LIB) $(LDFLAGS) $(LIBS)

$(BINDIR)/examples/cpp-test-framework: @srcdir@/cpp_test_framework.cpp $(MESOS_SCHED_LIB)
	$(CXX) $(CXXFLAGS) -o $@ $< $(MESOS_SCHED_LIB) $(LDFLAGS) $(LIBS)

$(BINDIR)/examples/cpp-test-executor: @srcdir@/cpp_test_executor.cpp $(MESOS_EXEC_LIB)
	$(CXX) $(CXXFLAGS) -o $@ $< $(MESOS_EXEC_LIB) $(LDFLAGS) $(LIBS)

$(BINDIR)/examples/long-lived-framework: @srcdir@/long_lived_framework.cpp $(MESOS_SCHED_LIB)
	$(CXX) $(CXXFLAGS) -o $@ $< $(MESOS_SCHED_LIB) $(LDFLAGS) $(LIBS)

$(BINDIR)/examples/long-lived-executor: @srcdir@/long_lived_executor.cpp $(MESOS_EXEC_LIB)
	$(CXX) $(CXXFLAGS) -o $@ $< $(MESOS_EXEC_LIB) $(LDFLAGS) $(LIBS)

$(BINDIR)/examples/memhog: @srcdir@/memhog.cpp $(MESOS_SCHED_LIB)
	$(CXX) $(CXXFLAGS) -o $@ $< $(MESOS_SCHED_LIB) $(LDFLAGS) $(LIBS)

$(BINDIR)/examples/sleep: @srcdir@/sleep.cpp $(MESOS_SCHED_LIB)
  $(CXX) $(CXXFLAGS) -o $@ $< $(MESOS_SCHED_LIB) $(LDFLAGS) $(LIBS)

$(BINDIR)/examples/memhog-executor: @srcdir@/memhog_executor.cpp $(MESOS_EXEC_LIB)
	$(CXX) $(CXXFLAGS) -o $@ $< $(MESOS_EXEC_LIB) $(LDFLAGS) $(LIBS)

$(BINDIR)/examples/sleep-executor: @srcdir@/sleep_executor.cpp $(MESOS_EXEC_LIB)
  $(CXX) $(CXXFLAGS) -o $@ $< $(MESOS_EXEC_LIB) $(LDFLAGS) $(LIBS)

$(BINDIR)/examples/scheduled-memhog: @srcdir@/scheduled_memhog.cpp $(MESOS_SCHED_LIB)
	$(CXX) $(CXXFLAGS) -o $@ $< $(MESOS_SCHED_LIB) $(LDFLAGS) $(LIBS)

java:
ifdef JAVA_HOME
	$(MAKE) -C java
endif

python:
ifdef PYTHON_HEADERS
	$(MAKE) -C python
endif

all: $(EXAMPLES_EXES) java python

clean:
	rm -f $(patsubst %, %.d, $(EXAMPLES_EXES))
	rm -rf $(patsubst %, %.dSYM, $(EXAMPLES_EXES))
	rm -f $(EXAMPLES_EXES)
	rm -f TAGS
ifdef JAVA_HOME
	$(MAKE) -C java clean
endif
ifdef PYTHON_HEADERS
	$(MAKE) -C python clean
endif

.PHONY: default all clean java python
